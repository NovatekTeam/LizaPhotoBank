version: '3.8'
services:
  client-liza-alert:
    container_name: client-liza-alert
    environment:
      - GRAPHQL_SERVER=${GRAPHQL_SERVER}
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - ${HOST_CLIENT_PORT}:${CLIENT_PORT}
    depends_on:
      - server-liza-alert
      - pg-liza-alert

  server-liza-alert:
    container_name: server-liza-alert
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - SOLR_CORE=${SOLR_CORE}
      - SOLR_URL=${SOLR_URL}
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - ${HOST_SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - pg-liza-alert
    volumes:
      - ./temp_server:/tmp

  wsgi-liza-alert:
      container_name: wsgi-liza-alert
      build:
        context: ./wsgi
        dockerfile: Dockerfile
      volumes:
        - ./scripts:/scripts/
        - ./models:/models/
      # ports:
      #   - 5001:5000

  pg-liza-alert:
    image: postgres:13
    container_name: pg-liza-alert
    restart: always
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./posgtes/data:/var/lib/postgresql/data

  solr-liza-alert:
    container_name: solr-liza-alert
    image: solr:8.11.1
    ports:
      - "8983:8983"
    volumes:
      - ./solr:/var/solr/
    command:
      - solr-precreate
      - gettingstarted

  cvat_redis:
    container_name: cvat_redis
    image: redis:4.0-alpine
    restart: always

  cvat:
    container_name: cvat
    image: openvino/cvat_server
    restart: always
    depends_on:
      - cvat_redis
      - cvat_db
      - cvat_opa
    environment:
      DJANGO_MODWSGI_EXTRA_ARGS: ''
      ALLOWED_HOSTS: '*'
      CVAT_REDIS_HOST: 'cvat_redis'
      CVAT_POSTGRES_HOST: 'cvat_db'
      CVAT_POSTGRES_DBNAME: ${POSTGRES_DB}
      CVAT_POSTGRES_USER: ${POSTGRES_USER}
      CVAT_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ADAPTIVE_AUTO_ANNOTATION: 'false'
      no_proxy: elasticsearch,kibana,logstash,nuclio,opa,${no_proxy}
    labels:
      - traefik.enable=true
      - traefik.http.services.cvat.loadbalancer.server.port=8080
      - traefik.http.routers.cvat.rule=Host(`${CVAT_HOST:-localhost}`) &&
        PathPrefix(`/api/`, `/git/`, `/opencv/`, `/static/`, `/admin`, `/documentation/`, `/django-rq`)
      - traefik.http.routers.cvat.entrypoints=web
    volumes:
      - cvat_data:/home/django/data
      - cvat_keys:/home/django/keys
      - cvat_logs:/home/django/logs

  cvat_ui:
    container_name: cvat_ui
    image: openvino/cvat_ui
    restart: always
    depends_on:
      - cvat
    labels:
      - traefik.enable=true
      - traefik.http.services.cvat-ui.loadbalancer.server.port=80
      - traefik.http.routers.cvat-ui.rule=Host(`${CVAT_HOST:-localhost}`)
      - traefik.http.routers.cvat-ui.entrypoints=web

  traefik:
    image: traefik:v2.4
    container_name: traefik
    restart: always
    command:
      - '--providers.docker.exposedByDefault=false'
      - '--providers.docker.network=cvat'
      - '--entryPoints.web.address=:8080'
      - '--providers.file.directory=/etc/traefik/rules'
    ports:
      - 8080:8080
      - 8090:8090
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  cvat_opa:
    container_name: cvat_opa
    image: openpolicyagent/opa:0.34.2-rootless
    restart: always
    networks:
      cvat:
        aliases:
          - opa
    volumes:
      - ./cvat/apps/iam/rules:/rules
    ports:
      - '8181:8181'
    command: run --server --addr :8181 --set=decision_logs.console=true /rules

volumes:
  cvat_db:
  cvat_data:
  cvat_keys:
  cvat_logs:
